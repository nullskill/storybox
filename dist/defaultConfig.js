'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  options: {
    name: 'Storybox',
    url: 'https://github.com/isuvorov/storybox',
    goFullScreen: false,
    showLeftPanel: true,
    showDownPanel: true,
    showSearchBox: false,
    downPanelInRight: true,
    sortStoriesByKind: false
  },
  info: true,
  knob: true,
  isomorphicStyles: true,
  utils: {
    default: {
      root: {
        position: 'absolute',
        height: '100%',
        width: '100%',
        backgroundSize: 'cover'
      }
    },
    controls: [{
      name: 'Backgrounds',
      type: 'bg',
      items: [{
        name: 'No',
        root: {
          background: 'transparent'
        }
      }, {
        name: 'Image',
        root: {
          enable: true,
          backgroundImage: 'url("//mcheck.mgbeta.ru/images/bg3.jpg")'
        }
      }, {
        name: 'Gray',
        root: {
          background: '#eeeeee'
        }
      }]
    }, {
      name: 'Centered',
      items: [{
        name: 'No'
      }, {
        name: 'Yes',
        enable: true,
        root: {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center'
        }
      }]
    }, {
      name: 'Border',
      items: [{
        name: 'No'
      }, {
        name: 'Yes',
        wrap: {
          border: '1px black dotted'
        }
      }, {
        name: 'Marks',
        marks: true,
        enable: true
      }]
    }, {
      name: 'Paddings',
      items: [{
        name: 'No',
        enable: true
      }, {
        name: '10px',
        wrap: {
          padding: 10
        }
      }, {
        name: '50px',
        wrap: {
          padding: 50
        }
      }]
    }, {
      name: 'Width',
      items: [{
        name: 'No fix',
        enable: true
      }, {
        name: '320px',
        content: {
          width: 320
        }
      }, {
        name: '480px',
        content: {
          width: 480
        }
      }, {
        name: '768px',
        content: {
          width: 768
        }
      }, {
        name: '1000px',
        content: {
          width: 1000
        }
      }]
    }]
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWZhdWx0Q29uZmlnLmpzIl0sIm5hbWVzIjpbIm9wdGlvbnMiLCJuYW1lIiwidXJsIiwiZ29GdWxsU2NyZWVuIiwic2hvd0xlZnRQYW5lbCIsInNob3dEb3duUGFuZWwiLCJzaG93U2VhcmNoQm94IiwiZG93blBhbmVsSW5SaWdodCIsInNvcnRTdG9yaWVzQnlLaW5kIiwiaW5mbyIsImtub2IiLCJpc29tb3JwaGljU3R5bGVzIiwidXRpbHMiLCJkZWZhdWx0Iiwicm9vdCIsInBvc2l0aW9uIiwiaGVpZ2h0Iiwid2lkdGgiLCJiYWNrZ3JvdW5kU2l6ZSIsImNvbnRyb2xzIiwidHlwZSIsIml0ZW1zIiwiYmFja2dyb3VuZCIsImVuYWJsZSIsImJhY2tncm91bmRJbWFnZSIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJ3cmFwIiwiYm9yZGVyIiwibWFya3MiLCJwYWRkaW5nIiwiY29udGVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWU7QUFDYkEsV0FBUztBQUNQQyxVQUFNLFVBREM7QUFFUEMsU0FBSyxzQ0FGRTtBQUdQQyxrQkFBYyxLQUhQO0FBSVBDLG1CQUFlLElBSlI7QUFLUEMsbUJBQWUsSUFMUjtBQU1QQyxtQkFBZSxLQU5SO0FBT1BDLHNCQUFrQixJQVBYO0FBUVBDLHVCQUFtQjtBQVJaLEdBREk7QUFXYkMsUUFBTSxJQVhPO0FBWWJDLFFBQU0sSUFaTztBQWFiQyxvQkFBa0IsSUFiTDtBQWNiQyxTQUFPO0FBQ0xDLGFBQVM7QUFDUEMsWUFBTTtBQUNKQyxrQkFBVSxVQUROO0FBRUpDLGdCQUFPLE1BRkg7QUFHSkMsZUFBTyxNQUhIO0FBSUpDLHdCQUFnQjtBQUpaO0FBREMsS0FESjtBQVNMQyxjQUFVLENBQ1I7QUFDRWxCLFlBQU0sYUFEUjtBQUVFbUIsWUFBTSxJQUZSO0FBR0VDLGFBQU8sQ0FDTDtBQUNFcEIsY0FBTSxJQURSO0FBRUVhLGNBQU07QUFDSlEsc0JBQVk7QUFEUjtBQUZSLE9BREssRUFPTDtBQUNFckIsY0FBTSxPQURSO0FBRUVhLGNBQU07QUFDSlMsa0JBQVEsSUFESjtBQUVKQywyQkFBaUI7QUFGYjtBQUZSLE9BUEssRUFjTDtBQUNFdkIsY0FBTSxNQURSO0FBRUVhLGNBQU07QUFDSlEsc0JBQVk7QUFEUjtBQUZSLE9BZEs7QUFIVCxLQURRLEVBMEJSO0FBQ0VyQixZQUFNLFVBRFI7QUFFRW9CLGFBQU8sQ0FDTDtBQUNFcEIsY0FBTTtBQURSLE9BREssRUFJTDtBQUNFQSxjQUFNLEtBRFI7QUFFRXNCLGdCQUFRLElBRlY7QUFHRVQsY0FBTTtBQUNKVyxtQkFBUyxNQURMO0FBRUpDLDBCQUFnQixRQUZaO0FBR0pDLHNCQUFZO0FBSFI7QUFIUixPQUpLO0FBRlQsS0ExQlEsRUEyQ1I7QUFDRTFCLFlBQU0sUUFEUjtBQUVFb0IsYUFBTyxDQUNMO0FBQ0VwQixjQUFNO0FBRFIsT0FESyxFQUlMO0FBQ0VBLGNBQU0sS0FEUjtBQUVFMkIsY0FBTTtBQUNKQyxrQkFBUTtBQURKO0FBRlIsT0FKSyxFQVVMO0FBQ0U1QixjQUFNLE9BRFI7QUFFRTZCLGVBQU8sSUFGVDtBQUdFUCxnQkFBUTtBQUhWLE9BVks7QUFGVCxLQTNDUSxFQThEUjtBQUNFdEIsWUFBTSxVQURSO0FBRUVvQixhQUFPLENBQ0w7QUFDRXBCLGNBQU0sSUFEUjtBQUVFc0IsZ0JBQVE7QUFGVixPQURLLEVBS0w7QUFDRXRCLGNBQU0sTUFEUjtBQUVFMkIsY0FBTTtBQUNKRyxtQkFBUztBQURMO0FBRlIsT0FMSyxFQVdMO0FBQ0U5QixjQUFNLE1BRFI7QUFFRTJCLGNBQU07QUFDSkcsbUJBQVM7QUFETDtBQUZSLE9BWEs7QUFGVCxLQTlEUSxFQW1GUjtBQUNFOUIsWUFBTSxPQURSO0FBRUVvQixhQUFPLENBQ0w7QUFDRXBCLGNBQU0sUUFEUjtBQUVFc0IsZ0JBQVE7QUFGVixPQURLLEVBS0w7QUFDRXRCLGNBQU0sT0FEUjtBQUVFK0IsaUJBQVM7QUFDUGYsaUJBQU87QUFEQTtBQUZYLE9BTEssRUFXTDtBQUNFaEIsY0FBTSxPQURSO0FBRUUrQixpQkFBUztBQUNQZixpQkFBTztBQURBO0FBRlgsT0FYSyxFQWlCTDtBQUNFaEIsY0FBTSxPQURSO0FBRUUrQixpQkFBUztBQUNQZixpQkFBTztBQURBO0FBRlgsT0FqQkssRUF1Qkw7QUFDRWhCLGNBQU0sUUFEUjtBQUVFK0IsaUJBQVM7QUFDUGYsaUJBQU87QUFEQTtBQUZYLE9BdkJLO0FBRlQsS0FuRlE7QUFUTDtBQWRNLEMiLCJmaWxlIjoiZGVmYXVsdENvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcclxuICBvcHRpb25zOiB7XHJcbiAgICBuYW1lOiAnU3Rvcnlib3gnLFxyXG4gICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL2lzdXZvcm92L3N0b3J5Ym94JyxcclxuICAgIGdvRnVsbFNjcmVlbjogZmFsc2UsXHJcbiAgICBzaG93TGVmdFBhbmVsOiB0cnVlLFxyXG4gICAgc2hvd0Rvd25QYW5lbDogdHJ1ZSxcclxuICAgIHNob3dTZWFyY2hCb3g6IGZhbHNlLFxyXG4gICAgZG93blBhbmVsSW5SaWdodDogdHJ1ZSxcclxuICAgIHNvcnRTdG9yaWVzQnlLaW5kOiBmYWxzZSxcclxuICB9LFxyXG4gIGluZm86IHRydWUsXHJcbiAga25vYjogdHJ1ZSxcclxuICBpc29tb3JwaGljU3R5bGVzOiB0cnVlLFxyXG4gIHV0aWxzOiB7XHJcbiAgICBkZWZhdWx0OiB7XHJcbiAgICAgIHJvb3Q6IHtcclxuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgICBoZWlnaHQ6JzEwMCUnLFxyXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICAgICAgYmFja2dyb3VuZFNpemU6ICdjb3ZlcicsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgY29udHJvbHM6IFtcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6ICdCYWNrZ3JvdW5kcycsXHJcbiAgICAgICAgdHlwZTogJ2JnJyxcclxuICAgICAgICBpdGVtczogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnTm8nLFxyXG4gICAgICAgICAgICByb290OiB7XHJcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ0ltYWdlJyxcclxuICAgICAgICAgICAgcm9vdDoge1xyXG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoXCIvL21jaGVjay5tZ2JldGEucnUvaW1hZ2VzL2JnMy5qcGdcIiknLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnR3JheScsXHJcbiAgICAgICAgICAgIHJvb3Q6IHtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAnI2VlZWVlZScsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAnQ2VudGVyZWQnLFxyXG4gICAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdObycsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnWWVzJyxcclxuICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICByb290OiB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcclxuICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICBdXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAnQm9yZGVyJyxcclxuICAgICAgICBpdGVtczogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnTm8nLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ1llcycsXHJcbiAgICAgICAgICAgIHdyYXA6IHtcclxuICAgICAgICAgICAgICBib3JkZXI6ICcxcHggYmxhY2sgZG90dGVkJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnTWFya3MnLFxyXG4gICAgICAgICAgICBtYXJrczogdHJ1ZSxcclxuICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICBdXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAnUGFkZGluZ3MnLFxyXG4gICAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdObycsXHJcbiAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICcxMHB4JyxcclxuICAgICAgICAgICAgd3JhcDoge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDEwLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnNTBweCcsXHJcbiAgICAgICAgICAgIHdyYXA6IHtcclxuICAgICAgICAgICAgICBwYWRkaW5nOiA1MCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICBdXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAnV2lkdGgnLFxyXG4gICAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdObyBmaXgnLFxyXG4gICAgICAgICAgICBlbmFibGU6IHRydWUsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnMzIwcHgnLFxyXG4gICAgICAgICAgICBjb250ZW50OiB7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDMyMCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJzQ4MHB4JyxcclxuICAgICAgICAgICAgY29udGVudDoge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA0ODAsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICc3NjhweCcsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IHtcclxuICAgICAgICAgICAgICB3aWR0aDogNzY4LFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnMTAwMHB4JyxcclxuICAgICAgICAgICAgY29udGVudDoge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAwLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIF1cclxuICAgICAgfVxyXG4gICAgXVxyXG4gIH1cclxufTtcclxuIl19